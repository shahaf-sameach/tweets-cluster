from twitter_api import Twitter
import logging
from time import sleep
from settings import TwitterSettings
from database_handler import Database

logging.basicConfig(level=logging.DEBUG, format='%(asctime)s (%(threadName)-10s) %(message)s')

logging.debug("main start")

db = Database()
t = Twitter()

current_user = 0

next_link = None
while True:
  if current_user == len(TwitterSettings.all_users):
    current_user = 0

  t.set_creds_from_user(TwitterSettings.all_users[current_user])
  res, data = t.get_news_stream(link=next_link)

  if 'next_results' in data['search_metadata'].keys():
    next_link = data['search_metadata']['next_results']
  else:
    logging.debug("reached the end of time... sleeping...")
    next_link = None
    sleep(60)

  if res['status'] == '200':
    for tweet in data['statuses']:
      try:
        db.insert_tweet(tweet)
        logging.debug("inserted tweet {} to db".format(tweet['id']))
      except Exception as e:
        logging.error("error inserting to database: {}".format(e))
  elif res['status'] == '429':
    logging.debug("reached limit, swithing user")
    current_user += 1
  else:
    logging.error("got unexpected response status: {}".format(res['status']))


logging.debug("proccess end")
  
